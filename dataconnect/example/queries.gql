mutation AddReview($productId: UUID!, $userId: UUID!, $rating: Int!, $reviewText: String!) @auth(level: USER) {
  review_insert(data: {productId: $productId, userId: $userId, rating: $rating, reviewText: $reviewText, createdAt_expr: "request.time"})
}

query GetProductReviews($productId: UUID!) @auth(level: PUBLIC, insecureReason: "This operation is safe to expose to the public") {
  reviews(where: {productId: {eq: $productId}}) {
    id
    userId
    rating
    reviewText
    createdAt
  }
}

mutation CreateProduct($sellerId: UUID!, $name: String!, $description: String!, $price: Float!, $stockQuantity: Int!, $category: String!) @auth(level: USER) {
  product_insert(data: {sellerId: $sellerId, name: $name, description: $description, price: $price, stockQuantity: $stockQuantity, category: $category, createdAt_expr: "request.time"})
}

query ListProductsByCategory($category: String!) @auth(level: PUBLIC, insecureReason: "This operation is safe to expose to the public") {
  products(where: {category: {eq: $category}}) {
    id
    name
    description
    price
    stockQuantity
  }
}